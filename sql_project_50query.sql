USE ECOMMERCE_DB;

SHOW TABLES ;

-- Get Total Quantity Sold by Each Product 
SELECT p.product_name, SUM(od.quantity) AS total_quantity_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name;

-- Get Total Quantity Sold by Each Product in ascending
SELECT p.product_name, SUM(od.quantity) AS total_quantity_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_quantity_sold ASC;

-- Get Total Quantity Sold by Each Product in ascending
SELECT p.product_name, SUM(od.quantity) AS total_quantity_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_quantity_sold DESC;

-- FINDING STARTING DATE 
SELECT MIN(order_date) AS starting_date
FROM orders;

-- FINDING LAST DATE
SELECT MAX(order_date) AS ending_date
FROM orders;


-- Top 5 products
SELECT p.product_name, SUM(od.quantity) AS total_quantity_sold
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_quantity_sold DESC
LIMIT 5;  

-- Revenue Generated by Each Product in descending order
SELECT p.product_name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_revenue DESC;


-- Get Revenue Generated by Each Product in Ascending order
SELECT p.product_name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_revenue ASC;

-- Get Top 5 Revenue Generated Product 
SELECT p.product_name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_revenue DESC
LIMIT 5;

-- Get 5 Less Revenue Generated Product 
SELECT p.product_name, SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name
ORDER BY total_revenue ASC
LIMIT 5;

-- List All Orders and the Customers Who Placed Them
SELECT o.order_id, c.customer_name, o.order_date
FROM orders o
JOIN customers c ON o.customer_id = c.customer_id;

-- Get the Total Revenue for Each Product (Price * Quantity Sold) 
SELECT p.product_name, SUM(p.price * od.quantity) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id
GROUP BY p.product_name;

-- List Products and Their Available Stock
SELECT product_name, stock_qty
FROM products;

-- Ascending 
SELECT product_name, stock_qty
FROM products 
ORDER BY stock_qty ASC ;

-- Descending
SELECT product_name, stock_qty
FROM products 
ORDER BY stock_qty DESC ;

-- WHICH 5 PRODUCT LEFT IN LARGE QUNTITY 
SELECT product_name, stock_qty
FROM products 
ORDER BY stock_qty DESC 
LIMIT 5;

-- WHICH 5 PRODUCT LEFT IN LARGE QUNTITY 
SELECT product_name, stock_qty
FROM products 
ORDER BY stock_qty ASC 
LIMIT 5;

-- Get Orders with Shipping Dates and Delivery Dates
SELECT o.order_id, s.shipdate, s.deliverydate
FROM orders o
JOIN shipping s ON o.order_id = s.order_id;

-- List Products with Customer Reviews and Ratings
SELECT p.product_name, r.rating, r.comments, c.customer_name
FROM reviews r
JOIN products p ON r.product_id = p.product_id
JOIN customers c ON r.customer_id = c.customer_id;

-- List Products with less Customer Reviews and Ratings
SELECT p.product_name, r.rating, r.comments, c.customer_name
FROM reviews r
JOIN products p ON r.product_id = p.product_id
JOIN customers c ON r.customer_id = c.customer_id
ORDER BY rating ASC 
LIMIT 5;


-- List Products with top 5  Customer Reviews and Ratings
SELECT p.product_name, r.rating, r.comments, c.customer_name
FROM reviews r
JOIN products p ON r.product_id = p.product_id
JOIN customers c ON r.customer_id = c.customer_id
ORDER BY rating DESC 
LIMIT 5;

-- Customer Lifetime Value (CLTV)
SELECT c.customer_name, SUM(od.quantity * p.price) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
GROUP BY c.customer_name
ORDER BY total_spent DESC;

-- find the top 5 customer using the spent total amount 
SELECT c.customer_name, SUM(od.quantity * p.price) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
GROUP BY c.customer_name
ORDER BY total_spent DESC
LIMIT 5;

-- find the ascending order in customer using the spent total amount
SELECT c.customer_name, SUM(od.quantity * p.price) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
GROUP BY c.customer_name
ORDER BY total_spent ASC;

-- find the last 5 customer using the spent total amount
SELECT c.customer_name, SUM(od.quantity * p.price) AS total_spent
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
JOIN order_details od ON o.order_id = od.order_id
JOIN products p ON od.product_id = p.product_id
GROUP BY c.customer_name
ORDER BY total_spent ASC
LIMIT 5;

-- This query calculates the average value of each order.
SELECT AVG(order_total) AS average_order_value
FROM (
    SELECT o.order_id, SUM(od.quantity * p.price) AS order_total
    FROM orders o
    JOIN order_details od ON o.order_id = od.order_id
    JOIN products p ON od.product_id = p.product_id
    GROUP BY o.order_id
) AS order_totals;


-- Customer Segmentation Based on Total Orders
SELECT c.customer_name, COUNT(o.order_id) AS total_orders
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id
GROUP BY c.customer_name
ORDER BY total_orders DESC;

-- Products with Discounts Applied
SELECT p.product_name, d.discount_amount, COUNT(od.order_id) AS total_orders_with_discount
FROM discounts d
JOIN products p ON d.product_id = p.product_id
LEFT JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name, d.discount_amount
ORDER BY total_orders_with_discount DESC;


-- Products with descending Discounts Applied
SELECT p.product_name, d.discount_amount, COUNT(od.order_id) AS total_orders_with_discount
FROM discounts d
JOIN products p ON d.product_id = p.product_id
LEFT JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name, d.discount_amount
ORDER BY discount_amount DESC
;

-- Products with ascending Discounts Applied
SELECT p.product_name, d.discount_amount, COUNT(od.order_id) AS total_orders_with_discount
FROM discounts d
JOIN products p ON d.product_id = p.product_id
LEFT JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name, d.discount_amount
ORDER BY discount_amount ASC
;
-- Top 5 Products using Discounts amount Applied
SELECT p.product_name, d.discount_amount, COUNT(od.order_id) AS total_orders_with_discount
FROM discounts d
JOIN products p ON d.product_id = p.product_id
LEFT JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name, d.discount_amount
ORDER BY discount_amount DESC
LIMIT 5;

-- Last 5 Products using Discounts amount Applied
SELECT p.product_name, d.discount_amount, COUNT(od.order_id) AS total_orders_with_discount
FROM discounts d
JOIN products p ON d.product_id = p.product_id
LEFT JOIN order_details od ON p.product_id = od.product_id
GROUP BY p.product_name, d.discount_amount
ORDER BY discount_amount ASC
LIMIT 5;

-- Product Stock Alerts
SELECT product_name, stock_qty
FROM products
WHERE stock_qty < 100
ORDER BY stock_qty ASC;


-- Customer Reviews and Ratings
SELECT p.product_name, AVG(r.rating) AS average_rating, COUNT(r.review_id) AS total_reviews
FROM reviews r
JOIN products p ON r.product_id = p.product_id
GROUP BY p.product_name
ORDER BY average_rating DESC;

-- Shipping Performance (Average Delivery Time)
SELECT AVG(DATEDIFF(s.deliverydate, s.shipdate)) AS average_delivery_time
FROM shipping s;


-- Orders by Month
SELECT MONTH(order_date) AS order_month, COUNT(order_id) AS total_orders
FROM orders
GROUP BY MONTH(order_date)
ORDER BY total_orders DESC;

-- Get Orders by top 5 Month
SELECT MONTH(order_date) AS order_month, COUNT(order_id) AS total_orders
FROM orders
GROUP BY MONTH(order_date)
ORDER BY total_orders DESC
limit 5;

-- Get less Orders by  5 Month
SELECT MONTH(order_date) AS order_month, COUNT(order_id) AS total_orders
FROM orders
GROUP BY MONTH(order_date)
ORDER BY total_orders ASC
limit 5;


SELECT * FROM customers;

-- 
SELECT product_name, price FROM products;

-- Find Customers Who Placed Orders 
SELECT DISTINCT c.customer_name
FROM customers c
JOIN orders o ON c.customer_id = o.customer_id;

-- Get Total Number of Orders
SELECT COUNT(*) AS total_orders FROM orders;

-- Get Total Revenue from All Orders
SELECT SUM(od.quantity * p.price) AS total_revenue
FROM order_details od
JOIN products p ON od.product_id = p.product_id;

-- lists all orders and sorts them by the order date in descending order.
SELECT * FROM orders
ORDER BY order_date DESC;

-- lists all orders and sorts them by the order date in ascending order.
SELECT * FROM orders
ORDER BY order_date ASC;

-- lists all orders and sorts them by the order date in top 5 order.
SELECT * FROM orders
ORDER BY order_date DESC
LIMIT 5;

-- lists all orders and sorts them by the order date in last 5 order.
SELECT * FROM orders
ORDER BY order_date ASC
LIMIT 5;


SELECT * FROM order_details;

-- Get Orders with Shipping Details 
SELECT o.order_id, s.shipdate, s.deliverydate
FROM orders o
JOIN shipping s ON o.order_id = s.order_id;




